x<-1:300
y<-cos(x)
plot(x,y)
??aqua
??term
?x11
ls()
install.package('gsl)
x
)
')
install.package('gsl')
install.packages('gsl')
x<-seq(-pi,pi,length.out=400)
plot(x,sin(x))
library(gsl)
??bessel
x<-seq(0,15,len=1000)
plot(x,bessel_J0(x),xlim=c(0,16))
besselK(0.55,4)-bessel_Knu(4,.55)
library(rgl)
??rgl
?bessel
??bessel
is.loaded(gsl)
is.loaded('gsl')
??bessel
?bessel_yl
?gsl:bessel_yl
?gsl::bessel_yl
load("MieCoefficients.R")
source("MieCoefficients.R")
xi(2,3)
x<-seq(0,10,by=.1)
u.r<-Real(xi(1,x))
u.r<-Re(xi(1,x))
u.i<-Im(xi(1,x))
plot(x,u.r)
plot(x,Re(xi(0,x)))
bessel_jl(0,1)
bessel_yl(0,1)
bessel_jl(0,1)+1i*bessel_yl(0,1)
getwd()
ms<-read.table("Documents/megasena.prn")
ms
hist(ms)
ms
head(ms)
hist(as.matrix(ms))
plot(as.matrix(ms))
boxplot(as.matrix(ms))
u<-boxplot(as.matrix(ms))
u
boxplot(as.matrix(ms))
grid()
?boxplot
ms[[7,1]]
ms[[12,1]]
ms[[25,1]]
plot(ms[[,1]])
head(ms)
plot(ms$V1)
mean(ms$V1)
boxplot(as.matrix(ms))
grid()
?grid
grid(ny=12)
boxplot(as.matrix(ms))
grid(ny=12)
boxplot(as.matrix(ms))
grid(ny=1)
grid(ny=2)
grid(ny=60)
boxplot(as.matrix(ms))
library(rmpi)
packages()
package.manager()
q()
x<-pi*seq(-1,1,by=.1)
plot(x,sin(x))
fix(x)
install.package(rmpi)
install.packages(rmpi)
install.packages(rcpp)
library("Rmpi")
library("gputools")
mpi.spawn.Rslaves()
.Last <- function(){
if (is.loaded("mpi_initialize")){
if (mpi.comm.size(1) > 0){
print("Please use mpi.close.Rslaves() to close slaves.")
mpi.close.Rslaves()
}
print("Please use mpi.quit() to quit R")
.Call("mpi_finalize")
}
mpi.remote.exec(paste("I am",mpi.comm.rank(),"of",mpi.comm.size()))
mpi.close.Rslaves()
mpi.quit()
#-------------------------------------------------------------------------------
source('~/Documents/UNICAMP/DOCTOR/sex/RectangularWaveGuide.R')
source('~/Documents/UNICAMP/DOCTOR/sex/CylindricalWaveGuides.R')
View(GTE)
image(GTE)
library(rgsl)
??library
??package
compilePdf("~/Downloads/R-VSWF/ValidationVectorSphericalHarmonics.Rnw")
source("PlaneWave.R")
\\
source("BSC.R")
source("/Users/wmoreira/Downloads/R-VSWF/BSC.R")
source("/Users/wmoreira/Downloads/R-VSWF/HansenMultipoles.R")
ls()
getwd()
getwd()
setwd("~/Downloads/R-VSWF")
ls()
source("HanseMultipoles")
source("HanseMultipoles.R")
??encoding
encoding()
Encoding()
Sys.getlocale()
Sys.setlocale("pt_BR.latin1")
Sys.setlocale("pt_BR.latin-1")
Sys.setlocale("us.latin-1")
Sys.setlocale("pt_BR.Latin-1")
Sys.setlocale("us.Latin-1")
110n_info()
l10n_info()
source("TestaNoR.R")
q()
rm(list=ls())
q
q()
source("CT.R")
rm(list=ls())
q()
rm(list=ls())
q()
source("CT.R")
q()
ls()
rm(list=ls())
q()
source("RectangularWG.R")
source("RectangularWG.R")
q()
source("BesselBeamsII.R")
graphics.off()
ze
zo
ze+zo
UVS<-PVectorSphericalWaveFunctions(k,x,y,ze,lmax,u$GTE,u$GTM)
tem.uvs<-array(UVS$Em,c(NP,NP,1))[,,1]
tez.uvs<-array(UVS$Ez,c(NP,NP,1))[,,1]
tep.uvs<-array(UVS$Ep,c(NP,NP,1))[,,1]
thm.uvs<-array(UVS$Hm,c(NP,NP,1))[,,1]
thz.uvs<-array(UVS$Hz,c(NP,NP,1))[,,1]
thp.uvs<-array(UVS$Hp,c(NP,NP,1))[,,1]
x11();image(x+xo,y+yo,Re(tem.uvs),main=paste("PWE Em",lmax),col=cm.colors(1024));grid()
x11();image(x+xo,y+yo,Re(tem.BBP),main="BBP Em",col=cm.colors(1024));grid()
x11();image(x+xo,y+yo,Re(thm.uvs),main=paste("PWE Hm",lmax),col=cm.colors(1024));grid()
x11();image(x+xo,y+yo,Re(thm.uvs-tem.BBP),main=paste("PWE Hm",lmax),col=cm.colors(1024));grid()
source("BesselBeamsI.R")
graphics.off()
x11();image(x+xo,y+yo,Re(thm.uvs-tem.BBP),main=paste("PWE Hm",lmax),col=cm.colors(1024));grid()
x11();image(x+xo,y+yo,Re(thm.uvs-tem.BBZ),main=paste("PWE Hm",lmax),col=cm.colors(1024));grid()
x11();image(x+xo,y+yo,Re(thm.uvs-thm.BBZ),main=paste("PWE Hm",lmax),col=cm.colors(1024));grid()
x11();image(x+xo,y+yo,Re(tem.BBP),main="BBP Em",col=cm.colors(1024));grid()
library(tools)
Sweave("ValidationVectorSphericalHarmonics.Rnw")
texi2pdf("ValidationVectorSphericalHarmonics.tex")
texi2pdf("ValidationVectorSphericalHarmonics.tex")
texi2pdf("ValidationVectorSphericalHarmonics.tex")
?pdf
?ifelse
?pdf
source("BesselBeamsI.R")
?setEPS
source("RectangularWG.pdf.R")
source("RectangularWG.pdf.R")
source("RectangularWG.pdf.R")
pdf("Re.tem.rwg.wfd.pdf");image(x+xo,y+yo,Re(tem.rwg),main="RWG Re Em",col=cm.colors(1024));grid();dev.off()
pdf("Re.tez.rwg.wfd.pdf");image(x+xo,y+yo,Re(tez.rwg),main="RWG Re Ez",col=cm.colors(1024));grid();dev.off()
pdf("Re.tep.rwg.wfd.pdf");image(x+xo,y+yo,Re(tep.rwg),main="RWG Re Ep",col=cm.colors(1024));grid();dev.off()
pdf("Re.thm.rwg.wfd.pdf");image(x+xo,y+yo,Re(thm.rwg),main="RWG Re Hm",col=cm.colors(1024));grid();dev.off()
pdf("Re.thz.rwg.wfd.pdf");image(x+xo,y+yo,Re(thz.rwg),main="RWG Re Hz",col=cm.colors(1024));grid();dev.off()
pdf("Re.thp.rwg.wfd.pdf");image(x+xo,y+yo,Re(thp.rwg),main="RWG Re Hp",col=cm.colors(1024));grid();dev.off()
# Parte Imaginaria
pdf("Im.tem.rwg.wfd.pdf");image(x+xo,y+yo,Im(tem.rwg),main="RWG Im Em",col=cm.colors(1024));grid();dev.off()
pdf("Im.tez.rwg.wfd.pdf");image(x+xo,y+yo,Im(tez.rwg),main="RWG Im Ez",col=cm.colors(1024));grid();dev.off()
pdf("Im.tep.rwg.wfd.pdf");image(x+xo,y+yo,Im(tep.rwg),main="RWG Im Ep",col=cm.colors(1024));grid();dev.off()
pdf("Im.thm.rwg.wfd.pdf");image(x+xo,y+yo,Im(thm.rwg),main="RWG Im Hm",col=cm.colors(1024));grid();dev.off()
pdf("Im.thz.rwg.wfd.pdf");image(x+xo,y+yo,Im(thz.rwg),main="RWG Im Hz",col=cm.colors(1024));grid();dev.off()
pdf("Im.thp.rwg.wfd.pdf");image(x+xo,y+yo,Im(thp.rwg),main="RWG Im Hp",col=cm.colors(1024));grid();dev.off()
pdf("Re.tem.rwg.pwe.pdf");image(x+xo,y+yo,Re(tem.uvs),main=paste("PWE Re Em",lmax),col=cm.colors(1024));grid();dev.off()
pdf("Re.tez.rwg.pwe.pdf");image(x+xo,y+yo,Re(tez.uvs),main=paste("PWE Re Ez",lmax),col=cm.colors(1024));grid();dev.off()
pdf("Re.tep.rwg.pwe.pdf");image(x+xo,y+yo,Re(tep.uvs),main=paste("PWE Re Ep",lmax),col=cm.colors(1024));grid();dev.off()
pdf("Re.thm.rwg.pwe.pdf");image(x+xo,y+yo,Re(thm.uvs),main=paste("PWE Re Hm",lmax),col=cm.colors(1024));grid();dev.off()
pdf("Re.thz.rwg.pwe.pdf");image(x+xo,y+yo,Re(thz.uvs),main=paste("PWE Re Hz",lmax),col=cm.colors(1024));grid();dev.off()
pdf("Re.thp.rwg.pwe.pdf");image(x+xo,y+yo,Re(thp.uvs),main=paste("PWE Re Hp",lmax),col=cm.colors(1024));grid();dev.off()
# Parte Imaginaria
pdf("Im.tem.rwg.pwe.pdf");image(x+xo,y+yo,Im(tem.uvs),main=paste("PWE Im Em",lmax),col=cm.colors(1024));grid();dev.off()
pdf("Im.tez.rwg.pwe.pdf");image(x+xo,y+yo,Im(tez.uvs),main=paste("PWE Im Ez",lmax),col=cm.colors(1024));grid();dev.off()
pdf("Im.tep.rwg.pwe.pdf");image(x+xo,y+yo,Im(tep.uvs),main=paste("PWE Im Ep",lmax),col=cm.colors(1024));grid();dev.off()
pdf("Im.thm.rwg.pwe.pdf");image(x+xo,y+yo,Im(thm.uvs),main=paste("PWE Im Hm",lmax),col=cm.colors(1024));grid();dev.off()
pdf("Im.thz.rwg.pwe.pdf");image(x+xo,y+yo,Im(thz.uvs),main=paste("PWE Im Hz",lmax),col=cm.colors(1024));grid();dev.off()
pdf("Im.thp.rwg.pwe.pdf");image(x+xo,y+yo,Im(thp.uvs),main=paste("PWE Im Hp",lmax),col=cm.colors(1024));grid();dev.off()
?image
source("CylindricalWG.pdf.R")
source("CylindricalWG.pdf.R")
source("CylindricalWG.pdf.R")
source("BesselBeamsI.pdf.R")
source("BesselBeamsII.pdf.R")
source("CylindricalWG.pdf.R")
source("CylindricalWG.pdf.R")
Sweave("ValidationVectorSphericalHarmonics.Rnw")
texi2pdf("ValidationVectorSphericalHarmonics.tex")
source("RectangularWG.pdf.R")
source("RectangularWG.pdf.R")
Sweave("ValidationVectorSphericalHarmonics.Rnw")
source("RectangularWG.pdf.R")
texi2pdf("ValidationVectorSphericalHarmonics.tex")
source("RectangularWG.pdf.R")
source("RectangularWG.pdf.R")
texi2pdf("ValidationVectorSphericalHarmonics.tex")
Sweave("ValidationVectorSphericalHarmonics.Rnw")
texi2pdf("ValidationVectorSphericalHarmonics.tex")
Sweave("ValidationVectorSphericalHarmonics.Rnw")
texi2pdf("ValidationVectorSphericalHarmonics.tex")
Sweave("ValidationVectorSphericalHarmonics.Rnw")
texi2pdf("ValidationVectorSphericalHarmonics.tex")
Sweave("ValidationVectorSphericalHarmonics.Rnw")
texi2pdf("ValidationVectorSphericalHarmonics.tex")
source("CylindricalWG.pdf.R")
Sweave("ValidationVectorSphericalHarmonics.Rnw")
texi2pdf("ValidationVectorSphericalHarmonics.tex")
source("BesselBeamsI.pdf.R")
source("BesselBeamsII.pdf.R")
Sweave("ValidationVectorSphericalHarmonics.Rnw")
texi2pdf("ValidationVectorSphericalHarmonics.tex")
source("BesselBeamsII.pdf.R")
texi2pdf("ValidationVectorSphericalHarmonics.tex")
source("BesselBeamsI.pdf.R")
tem.uvs
tem.BBZ
uvs
UVS
BBZ
BBZ$Hp
UVS$Hp
UVS$Ep
q()
source("BesselBeamsI.pdf.R")
source("BesselBeamsII.pdf.R")
Sweave("ValidationVectorSphericalHarmonics.Rnw")
texi2pdf("ValidationVectorSphericalHarmonics.tex")
library(tools)
texi2pdf("ValidationVectorSphericalHarmonics.tex")
q()
source("RectangularWG.pdf.R")
Sweave("ValidationVectorSphericalHarmonics.Rnw")
texi2pdf("ValidationVectorSphericalHarmonics.tex")
library(tools)
texi2pdf("ValidationVectorSphericalHarmonics.tex")
q()
library(tools)
source("BesselBeamsI.pdf.R")
source("LE-BBZ.R")
texi2pdf("ValidationVectorSphericalHarmonics.tex")
q()
require(grDevices) # for colours
filled.contour(volcano, color = terrain.colors, asp = 1)# simple
x <- 10*1:nrow(volcano)
y <- 10*1:ncol(volcano)
filled.contour(x, y, volcano, color = terrain.colors,
    plot.title = title(main = "The Topography of Maunga Whau",
    xlab = "Meters North", ylab = "Meters West"),
    plot.axes = { axis(1, seq(100, 800, by = 100))
                  axis(2, seq(100, 600, by = 100)) },
    key.title = title(main="Height\n(meters)"),
    key.axes = axis(4, seq(90, 190, by = 10)))# maybe also asp=1
mtext(paste("filled.contour(.) from", R.version.string),
      side = 1, line = 4, adj = 1, cex = .66)
require(grDevices) # for colours
filled.contour(volcano, color = terrain.colors, asp = 1)# simple
x <- 10*1:nrow(volcano)
y <- 10*1:ncol(volcano)
filled.contour(x, y, volcano, color = terrain.colors,
    plot.title = title(main = "The Topography of Maunga Whau",
    xlab = "Meters North", ylab = "Meters West"),
    plot.axes = { axis(1, seq(100, 800, by = 100))
                  axis(2, seq(100, 600, by = 100)) },
    key.title = title(main="Height\n(meters)"),
    key.axes = axis(4, seq(90, 190, by = 10)))# maybe also asp=1
mtext(paste("filled.contour(.) from", R.version.string),
      side = 1, line = 4, adj = 1, cex = .66)
dim(volcano)
x<-seq(-2,2,by=.05)
y<-seq(-2,2,by=.1
)
myfn<-function(x,y){exp(-(x^2+y^2))+.6*exp(-((x+1.8)^2+y^2))}
z<-outer(x,y,myfn)
x
y
z
dim(z)
persp(x,y,z,theta=-40,phi=30)
persp(x,y,z,theta=-40,phi=30,xlab='east',ylab='north',zlab=)
persp(x,y,z,theta=-40,phi=30,xlab='east',ylab='north',zlab='height',ticktype='detailed')
persp(x,y,z,theta=-40,phi=30,shade=.7)
contour(x,y,z)
contour(x,y,z,lev=seq(0,1,.05))
filed.contour(x,y,z)
filled.contour(x,y,z)
image(x,y,z)
image(x,y,z)
contour(x,y,z,add=TRUE)
source("CylindricalWG.pdf.R")
source("LE-CWG-Contours.R")
source("LE-CWG-Contours.R")
source("RectangularWG.pdf.R")
source("LE-RWG.R")
source("LE-RWG-Contours.R")
source("BesselBeamsI.pdf.R")
source("LE-BBZ-Contours.R")
source("BesselBeamsII.pdf.R")
source("LE-BBP-Contours.R")
source("CylindricalWG.pdf.R")
source("RectangularWG.pdf.R")
source("BesselBeamsI.pdf.R")
source("BesselBeamsII.pdf.R")
q()
